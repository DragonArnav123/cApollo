cmake_minimum_required(VERSION 3.24.0)

# set the variables
set(APOLLO_C_STDLIB_VER 17)
set(APOLLO_C_STDLIB_VER_ENFORCE True)
set(
	APOLLO_COMPILE_DEF
	APOLLO_PLATFORM_WINDOWS=1
	APOLLO_CONFIG_DEBUG=1
	APOLLO_ASSETS_DIR=\"${CMAKE_CURRENT_SOURCE_DIR}/assets\"
	APOLLO_CORE=1)
set(APOLLO_OPENGL_API_DIR "${CMAKE_CURRENT_SOURCE_DIR}/glad")

# set the cmake variables
set(CMAKE_C_STANDARD ${APOLLO_C_STDLIB_VER})
set(CMAKE_C_STANDARD_REQUIRED ${APOLLO_C_STDLIB_VER_ENFORCE})

# add the files
file(GLOB_RECURSE APOLLO_SOURCE_FILES "source/*.c")
file(GLOB_RECURSE APOLLO_HEADER_FILES "include/*.h")

# add apollo dll target
add_library(
	Apollo
	SHARED 
	${APOLLO_SOURCE_FILES} 
	${APOLLO_OPENGL_API_DIR}/src/glad.c
	${APOLLO_HEADER_FILES})

# target properties
set_target_properties(Apollo PROPERTIES LINKER_LANGUAGE C)

# Link glfw, opengl, cglm 
target_link_libraries(Apollo PUBLIC glfw opengl32 cglm kernel32 user32 gdi32)

# add precompiled header
target_precompile_headers(Apollo PUBLIC include/APpch.h)

# add include directories
target_include_directories(
	Apollo 
	PUBLIC 
	${CMAKE_SOURCE_DIR}/glfw/include
	${CMAKE_SOURCE_DIR}/cglm/include 
	${APOLLO_OPENGL_API_DIR}/include
	include)

# add the macros
target_compile_definitions(Apollo PRIVATE ${APOLLO_COMPILE_DEF})

# Set output directory for DLL and intermediate files
set_target_properties(Apollo PROPERTIES
    LIBRARY_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/output"
    ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/build/archive"
    RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/output"
    PDB_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/build/pdb"
)
