cmake_minimum_required(VERSION 3.24)
project(Sandbox VERSION 1.0)

# set C standard
set(CMAKE_C_STANDARD 17)
set(CMAKE_C_STANDARD_REQUIRED True)

# source files
file(GLOB_RECURSE SANDBOX_SOURCE_FILES "source/*.c")
file(GLOB_RECURSE SANBOX_HEADER_FILES "include/*.h")

# add Sandbox executable target
add_executable(Sandbox ${SANDBOX_SOURCE_FILES} ${SANBOX_HEADER_FILES})

# definitions
set(
	SANDBOX_MACROS
	APOLLO_PLATFORM_WINDOWS=1
	APOLLO_CONFIG_DEBUG=1 
	SANDBOX_ASSETS_DIR=\"${CMAKE_CURRENT_SOURCE_DIR}/assets\")

# add link directori
target_link_directories(Sandbox PUBLIC ${CMAKE_SOURCE_DIR}/build/output)

# link ApolloEngine DLL
target_link_libraries(
	Sandbox PUBLIC libApollo opengl32)

# add link libraries
target_compile_definitions(Sandbox PUBLIC ${SANDBOX_MACROS})

# add include directory 
target_include_directories(
	Sandbox
	PUBLIC
	${CMAKE_SOURCE_DIR}/apollo/include
	${CMAKE_SOURCE_DIR}/cglm/include)

# set output directory for Sandbox executable
set_target_properties(Sandbox PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/output")

# Copy DLLs from YamiEngine/bin to Sandbox/build
#file(GLOB DLLS ${CMAKE_SOURCE_DIR}/bin/apollo)
#foreach(DLL ${DLLS})
#    add_custom_command(TARGET Sandbox POST_BUILD
#        COMMAND ${CMAKE_COMMAND} -E copy
#        ${DLL}
#        $<TARGET_FILE_DIR:Sandbox>
#    )
#endforeach()
